name: Release Build

on:
  workflow_dispatch:
    inputs:
      forceNextVersion:
        description: "Force next version"
        required: false
        default: ""
        type: string

jobs:
  createReleaseBranch:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: "adopt"
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1.0.4
      - name: Update release version
        uses: gradle/gradle-build-action@v2.3.0
        with:
          arguments: "updateVersion -Prelease=true -PforceNextVersion=${{ github.event.inputs.forceNextVersion }}"
      - name: Read version
        id: read_version
        uses: andstor/file-reader-action@v1
        with:
          path: build/version.txt
      - name: Setup git user
        uses: fregante/setup-git-user@v1
      - name: Create release branch
        run: |
          git checkout -b "release/v${{ steps.read_version.outputs.contents }}"
          git add .
          git commit -m "Update version to v${{ steps.read_version.outputs.contents }}"
          git tag "v${{ steps.read_version.outputs.contents }}"
          git push --atomic origin "release/v${{ steps.read_version.outputs.contents }}" "v${{ steps.read_version.outputs.contents }}"
    outputs:
      version: ${{ steps.read_version.outputs.contents }}
  check:
    runs-on: ubuntu-latest
    needs: createReleaseBranch
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          ref: "release/v${{ needs.createReleaseBranch.outputs.version }}"
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: "adopt"
      - name: Run checks
        uses: gradle/gradle-build-action@v2.3.0
        with:
          arguments: "check"
  publishToNexus:
    runs-on: ubuntu-latest
    needs: [createReleaseBranch, check]
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          ref: "release/v${{ needs.createReleaseBranch.outputs.version }}"
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: "adopt"
      - name: Read GPG key ring
        run: |
          mkdir -p build
          echo "${{ secrets.SIGNING_KEYRING }}" | base64 -d > build/secring.gpg
      - name: Publish to Sonatype Nexus
        uses: gradle/gradle-build-action@v2.3.0
        with:
          arguments: >
            publish
            -PsonatypeNexusUsername=${{ secrets.NEXUS_USERNAME }}
            -PsonatypeNexusPassword=${{ secrets.NEXUS_PASSWORD }}
            -Psigning.password=${{ secrets.SIGNING_PASSWORD }}
            -Psigning.keyId=${{ secrets.SIGNING_KEY_ID }}
            -Psigning.secretKeyRingFile=${{ github.workspace }}/build/secring.gpg
      - name: Clear GPG key ring
        run: rm build/secring.gpg
  publishToGithubReleases:
    runs-on: ubuntu-latest
    needs: [createReleaseBranch, check]
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          ref: "release/v${{ needs.createReleaseBranch.outputs.version }}"
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: "adopt"
      - name: Build artifacts
        uses: gradle/gradle-build-action@v2.3.0
        with:
          arguments: "bootJar bootWar"
      - name: Publish to GitHub Releases
        uses: ncipollo/release-action@v1
        with:
          tag: "v${{ needs.createReleaseBranch.outputs.version }}"
          name: "Release v${{ needs.createReleaseBranch.outputs.version }}"
          artifacts: "mailspy-app/build/libs/*.jar,mailspy-app/build/libs/*.war"
          artifactErrorsFailBuild: true
          token: ${{ secrets.GITHUB_TOKEN }}
  mergeReleaseBranch:
    runs-on: ubuntu-latest
    needs: [createReleaseBranch, publishToNexus, publishToGithubReleases]
    steps:
      - name: Check out master branch
        uses: actions/checkout@v3
        with:
          ref: master
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: "adopt"
      - name: Setup git user
        uses: fregante/setup-git-user@v1
      - name: Merge release branch
        run: |
          git fetch
          git merge origin/release/v${{ needs.createReleaseBranch.outputs.version }}
      - name: Restore snapshot version
        uses: gradle/gradle-build-action@v2.3.0
        with:
          arguments: "updateBuildVersion -Prelease=false"
      - name: Read version
        id: read_version
        uses: andstor/file-reader-action@v1
        with:
          path: build/version.txt
      - name: Commit and push changes
        run: |
          git add .
          git commit -m "Update version to v${{ steps.read_version.outputs.contents }}"
          git push -u
