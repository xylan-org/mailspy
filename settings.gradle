/*
 * Copyright (c) 2022 xylan.org
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

rootProject.name = "mailspy"

include "mailspy-app"
include "mailspy-core"
include "mailspy-frontend"

dependencyResolutionManagement {
    versionCatalogs {
        libs {
            version("gradle", "7.5.1")
            version("node", "16.15.0")
            version("spring-framework", "5.3.23")
            version("spring-boot", "2.7.4")
            version("slf4j", "1.7.36")
            version("subetha", "3.1.7")
            version("commons-io", "2.11.0")
            version("jakarta-servletapi", "4.0.4")
            version("jakarta-annotationsapi", "1.3.5")
            version("lombok", "1.18.24")
            version("testng", "7.6.1")
            version("mockito", "4.8.0")
            version("mockito-testng", "0.4.26")
            version("logback", "1.2.11")
            version("assertj", "3.23.1")
            version("hamcrest", "2.2")
            version("json-path", "2.7.0")
            version("jackson", "2.13.4")
            version("owasp-dependencycheck", "7.2.1")
            version("coditory-integrationtest", "1.4.4")
            version("nebula-optionalbase", "7.0.0")
            version("siouan-frontend", "6.0.0")
            version("checkstyle", "10.1")
            version("pmd", "6.45.0")
            version("versions-plugin", "0.42.0")
            version("jacoco", "0.8.8")
            version("spotless", "6.11.0")
            version("spotless-changelog", "2.4.0")
            version("palantirformat", "2.25.0")
            version("grgit", "5.0.0")
            version("lombokplugin", "5.0.0")

            library("spring-boot-autoconfigure", "org.springframework.boot", "spring-boot-autoconfigure").versionRef("spring-boot")
            library("spring-boot-test", "org.springframework.boot", "spring-boot-test").versionRef("spring-boot")
            library("spring-boot-devtools", "org.springframework.boot", "spring-boot-devtools").versionRef("spring-boot")
            library("spring-boot-starter-base", "org.springframework.boot", "spring-boot-starter").versionRef("spring-boot")
            library("spring-boot-starter-web", "org.springframework.boot", "spring-boot-starter-web").versionRef("spring-boot")
            library("spring-context-support", "org.springframework", "spring-context-support").versionRef("spring-framework")
            library("spring-webmvc", "org.springframework", "spring-webmvc").versionRef("spring-framework")
            library("spring-test", "org.springframework", "spring-test").versionRef("spring-framework")
            library("slf4j-api", "org.slf4j", "slf4j-api").versionRef("slf4j")
            library("subetha", "org.subethamail", "subethasmtp").versionRef("subetha")
            library("apache-commons-io", "commons-io", "commons-io").versionRef("commons-io")
            library("jakarta-servletapi", "jakarta.servlet", "jakarta.servlet-api").versionRef("jakarta-servletapi")
            library("jakarta-annotationsapi", "jakarta.annotation", "jakarta.annotation-api").versionRef("jakarta-annotationsapi")
            library("testng", "org.testng", "testng").versionRef("testng")
            library("mockito-core", "org.mockito", "mockito-core").versionRef("mockito")
            library("mockito-testng", "org.mockito", "mockito-testng").versionRef("mockito-testng")
            library("logback-classic", "ch.qos.logback", "logback-classic").versionRef("logback")
            library("assertj-core", "org.assertj", "assertj-core").versionRef("assertj")
            library("hamcrest", "org.hamcrest", "hamcrest").versionRef("hamcrest")
            library("jsonpath", "com.jayway.jsonpath", "json-path").versionRef("json-path")
            library("jackson-databind", "com.fasterxml.jackson.core", "jackson-databind").versionRef("jackson")
            library("jackson-datatype-jsr310", "com.fasterxml.jackson.datatype", "jackson-datatype-jsr310").versionRef("jackson")

            plugin("owasp-dependencycheck", "org.owasp.dependencycheck").versionRef("owasp-dependencycheck")
            plugin("coditory-integrationtest", "com.coditory.integration-test").versionRef("coditory-integrationtest")
            plugin("nebula-optionalbase", "nebula.optional-base").versionRef("nebula-optionalbase")
            plugin("spring-boot-plugin", "org.springframework.boot").versionRef("spring-boot")
            plugin("siouan-frontend", "org.siouan.frontend-jdk11").versionRef("siouan-frontend")
            plugin("versions", "com.github.ben-manes.versions").versionRef("versions-plugin")
            plugin("spotless", "com.diffplug.spotless").versionRef("spotless")
            plugin("spotless-changelog", "com.diffplug.spotless-changelog").versionRef("spotless-changelog")
            plugin("grgit", "org.ajoberstar.grgit").versionRef("grgit")
            plugin("lombok", "io.franzbecker.gradle-lombok").versionRef("lombokplugin")

            bundle("spring-boot-starters", [
                "spring-boot-starter-base",
                "spring-boot-starter-web"
            ])
        }
    }
}
