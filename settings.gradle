rootProject.name = "mailspy"

include "mailspy-app"
include "mailspy-core"
include "mailspy-frontend"

enableFeaturePreview("VERSION_CATALOGS")

dependencyResolutionManagement {
    versionCatalogs {
        libs {
            version("spring-framework", "5.3.17")
            version("spring-boot", "2.6.5")
            version("slf4j", "1.7.36")
            version("subetha", "3.1.7")
            version("commons-io", "2.6")
            version("jakarta-servletapi", "4.0.4")
            version("jakarta-annotationsapi", "1.3.5")
            version("lombok", "1.18.22")
            version("testng", "7.4.0")
            version("mockito", "4.0.0")
            version("mockito-testng", "0.4.13")
            version("logback", "1.2.11")
            version("assertj", "3.21.0")
            version("hamcrest", "2.2")
            version("json-path", "2.6.0")
            version("jackson", "2.13.2")
            version("owasp-dependencycheck", "6.0.3")
            version("coditory-integrationtest", "1.3.0")
            version("nebula-optionalbase", "7.0.0")
            version("siouan-frontend", "6.0.0")

            alias("spring-boot-autoconfigure")
                .to("org.springframework.boot", "spring-boot-autoconfigure").versionRef("spring-boot")
            alias("spring-boot-test")
                .to("org.springframework.boot", "spring-boot-test").versionRef("spring-boot")
            alias("spring-boot-devtools")
                .to("org.springframework.boot", "spring-boot-devtools").versionRef("spring-boot")
            alias("spring-boot-starter-base")
                .to("org.springframework.boot", "spring-boot-starter").versionRef("spring-boot")
            alias("spring-boot-starter-web")
                .to("org.springframework.boot", "spring-boot-starter-web").versionRef("spring-boot")
            alias("spring-context-support")
                .to("org.springframework", "spring-context-support").versionRef("spring-framework")
            alias("spring-webmvc")
                .to("org.springframework", "spring-webmvc").versionRef("spring-framework")
            alias("spring-test")
                .to("org.springframework", "spring-test").versionRef("spring-framework")
            alias("slf4j-api")
                .to("org.slf4j", "slf4j-api").versionRef("slf4j")
            alias("subetha")
                .to("org.subethamail", "subethasmtp").versionRef("subetha")
            alias("apache-commons-io")
                .to("commons-io", "commons-io").versionRef("commons-io")
            alias("jakarta-servletapi")
                .to("jakarta.servlet", "jakarta.servlet-api").versionRef("jakarta-servletapi")
            alias("jakarta-annotationsapi")
                .to("jakarta.annotation", "jakarta.annotation-api").versionRef("jakarta-annotationsapi")
            alias("lombok")
                .to("org.projectlombok", "lombok").versionRef("lombok")
            alias("testng")
                .to("org.testng", "testng").versionRef("testng")
            alias("mockito-core")
                .to("org.mockito", "mockito-core").versionRef("mockito")
            alias("mockito-testng")
                .to("org.mockito", "mockito-testng").versionRef("mockito-testng")
            alias("logback-classic")
                .to("ch.qos.logback", "logback-classic").versionRef("logback")
            alias("assertj-core")
                .to("org.assertj", "assertj-core").versionRef("assertj")
            alias("hamcrest")
                .to("org.hamcrest", "hamcrest").versionRef("hamcrest")
            alias("jsonpath")
                .to("com.jayway.jsonpath", "json-path").versionRef("json-path")
            alias("jackson-databind")
                .to("com.fasterxml.jackson.core", "jackson-databind").versionRef("jackson")
            alias("jackson-datatype-jsr310")
                .to("com.fasterxml.jackson.datatype", "jackson-datatype-jsr310").versionRef("jackson")

            alias("owasp-dependencycheck")
                .toPluginId("org.owasp.dependencycheck").versionRef("owasp-dependencycheck")
            alias("coditory-integrationtest")
                .toPluginId("com.coditory.integration-test").versionRef("coditory-integrationtest")
            alias("nebula-optionalbase")
                .toPluginId("nebula.optional-base").versionRef("nebula-optionalbase")
            alias("spring-boot-plugin")
                .toPluginId("org.springframework.boot").versionRef("spring-boot")
            alias("siouan-frontend")
                .toPluginId("org.siouan.frontend-jdk11").versionRef("siouan-frontend")

            bundle("spring-boot-starters", [
                "spring-boot-starter-base",
                "spring-boot-starter-web"
            ])
        }
    }
}
