description = "MailSpy :: Core"
sourceCompatibility = "${sourceCompatibility}"

apply plugin: "java-library"
apply plugin: "com.coditory.integration-test"

configurations {
	frontend
    testImplementation.extendsFrom compileOnly
}

dependencies {
    frontend project(":mailspy-frontend")

    implementation "org.slf4j:slf4j-api"
    implementation "org.subethamail:subethasmtp"
    implementation "commons-io:commons-io"

    compileOnly "org.springframework.boot:spring-boot-autoconfigure"
    compileOnly "org.springframework:spring-context-support"
    compileOnly "org.springframework:spring-webmvc"
    compileOnly "org.springframework.security:spring-security-config"
    compileOnly "org.springframework.security:spring-security-web"
    compileOnly "jakarta.servlet:jakarta.servlet-api"
    compileOnly "jakarta.annotation:jakarta.annotation-api"
    compileOnly "org.projectlombok:lombok"

    testImplementation "org.testng:testng"
    testImplementation "org.mockito:mockito-core"
    testImplementation "org.mockito:mockito-testng"
    testImplementation "ch.qos.logback:logback-classic"
    testCompileOnly "org.projectlombok:lombok"

    integrationImplementation "org.springframework.boot:spring-boot-test"
    integrationImplementation "org.springframework:spring-test"
    integrationImplementation "org.springframework.security:spring-security-test"
    integrationImplementation "org.assertj:assertj-core"
    integrationImplementation "org.hamcrest:hamcrest"
    integrationImplementation "com.jayway.jsonpath:json-path"
    integrationImplementation "com.fasterxml.jackson.core:jackson-databind"

    annotationProcessor "org.projectlombok:lombok"
    testAnnotationProcessor "org.projectlombok:lombok"
}

jar {
    dependsOn ":mailspy-frontend:assemble"
    from (configurations.frontend.files) {
        into "META-INF/mailspy-frontend"
    }
}

tasks.withType(Test) {
    useTestNG()
    testLogging {
        events = ["passed", "failed", "skipped"]
        exceptionFormat = "full"
    }
}
