plugins {
    id "java-library"
    id "maven-publish"
    alias libs.plugins.coditory.integrationtest
    alias libs.plugins.nebula.optionalbase
}

description = "MailSpy :: Core"

configurations {
	frontendAssets
    testImplementation.extendsFrom compileOnly
}

dependencies {
    frontendAssets project(":mailspy-frontend")
    api libs.spring.boot.autoconfigure
    api libs.spring.context.support
    api libs.spring.webmvc
    api libs.slf4j.api
    api libs.subetha
    api libs.apache.commons.io
    api libs.jackson.databind, optional
    api libs.jackson.datatype.jsr310, optional
    compileOnly libs.jakarta.servletapi
    compileOnly libs.jakarta.annotationsapi
    compileOnly libs.lombok
    testImplementation libs.testng
    testImplementation libs.mockito.core
    testImplementation libs.mockito.testng
    testImplementation libs.logback.classic
    testCompileOnly libs.lombok
    integrationImplementation libs.spring.boot.test
    integrationImplementation libs.spring.test
    integrationImplementation libs.assertj.core
    integrationImplementation libs.hamcrest
    integrationImplementation libs.jsonpath
    annotationProcessor libs.lombok
    testAnnotationProcessor libs.lombok
}

jar {
    dependsOn ":mailspy-frontend:assemble"
    from (configurations.frontendAssets.files) {
        into "META-INF/mailspy-frontend"
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}

check {
    dependsOn tasks.withType(Test)
}

tasks.withType(Test) {
    useTestNG()
    testLogging {
        events = ["passed", "failed", "skipped"]
        exceptionFormat = "full"
    }
}

tasks.withType(JavaCompile) {
    options.release = 11
}
